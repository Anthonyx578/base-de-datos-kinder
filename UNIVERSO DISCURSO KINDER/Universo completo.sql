------------------------------------------------Drops------------------------------------------------------------------------
drop table TUTORESNINIO;
drop table MATRICULAACTIVIDAD;
drop table ACTIVIDAD;
drop table TUTORES;
drop table TIPOACTIVIDAD;
drop table PROFESORES;
drop table MEDICINAXESTADO;
drop table MEDICINA;
drop table ESTADO_SOCIAL;
drop table NINIO;
drop table Padre;
drop table GENERO;



-----------------------------------------------------------------------------------------------------------------------------
----------------------------------- CREACION DE TABLAS-----------------------------------------------------------------------
CREATE TABLE GENERO(
ID_GENERO INTEGER NOT NULL PRIMARY KEY,
GENERO VARCHAR2(20)
);

CREATE TABLE MEDICINA(
ID_MEDICINA INTEGER NOT NULL PRIMARY KEY,
NOMBREMEDICINA varchar2(50),
DESCRIPCION varchar2(50)
);


 CREATE TABLE TIPOACTIVIDAD(
 ID_TIPOACTIVIDAD INTEGER NOT NULL PRIMARY KEY,
 TIPOACTIVIDAD VARCHAR2(100),
 DESCRIPCION VARCHAR2 (200)
);

CREATE TABLE PROFESORES(
CEDULAPROFESOR INTEGER NOT NULL PRIMARY KEY,
NOMBRES varchar2(50),
APELLIDOS varchar2(50),
NACIONALIDAD VARCHAR2(50),
FECHADEINGRESO DATE,
NSENCYT NUMBER (5,0),
FK_ID_GENERO INTEGER,
CONSTRAINT FK_ID_GENERO FOREIGN KEY (FK_ID_GENERO) REFERENCES GENERO(ID_GENERO)
);

 CREATE TABLE ACTIVIDAD(
 ID_ACTIVIDAD INTEGER NOT NULL PRIMARY KEY,
 NOMBREACTIVIDAD VARCHAR2(50),
 DESCRIPCION VARCHAR2(100),
 MESES_DURACION INTEGER,
 NUMALUMNOS NUMBER(3),
 NUMALUMNOS_DESERTORES NUMBER(3),
 MATERIALES VARCHAR2(200),
 PRECIO_ACTIVIDAD NUMBER (7,2),
 FK_ID_TIPOACTIVIDAD INTEGER,
 FK_CEDULAPROFESOR INTEGER,
 CONSTRAINT FK_ID_TIPOACTIVIDAD FOREIGN KEY (FK_ID_TIPOACTIVIDAD) REFERENCES TIPOACTIVIDAD(ID_TIPOACTIVIDAD),
 CONSTRAINT FK_CEDULAPROFESOR FOREIGN KEY (FK_CEDULAPROFESOR) REFERENCES PROFESORES(CEDULAPROFESOR)
 );
 
 CREATE TABLE TUTORES(
CEDULATUTOR INTEGER NOT NULL PRIMARY KEY,
NOMBRES varchar2(50),
APELLIDOS varchar2(50),
NACIONALIDAD VARCHAR2(50),
DIRECCION VARCHAR2(100),
TELEFONO NUMBER(10),
TELEFONODOMICILIO NUMBER(10),
--FK--
FK_ID_GENERO  INTEGER NOT NULL,
CONSTRAINT FK_ID_GENEROTUTORES FOREIGN KEY (FK_ID_GENERO) REFERENCES GENERO(ID_GENERO)
);

Create table Padre(
CEDULAPADRE INTEGER NOT NULL PRIMARY KEY,
NOMBRES varchar2(50),
APELLIDOS varchar2(50),
NACIONALIDAD VARCHAR2(50),
DIRECCION VARCHAR2(100),
TELEFONO NUMBER(10),
TELEFONODOMICILIO NUMBER(10),
FECHANACIMIENTO DATE,
--LLAVES SECUNDARIAS
FK_ID_GENERO INTEGER NOT NULL,
CONSTRAINT FK_ID_GENEROPADRE FOREIGN KEY (FK_ID_GENERO) REFERENCES GENERO(ID_GENERO)
);

CREATE TABLE NINIO(
CEDULANINIO INTEGER NOT NULL PRIMARY KEY,
NOMBRES varchar2(50),
APELLIDOS varchar2(50),
NACIONALIDAD VARCHAR2(50),
EDAD INTEGER,
FECHANACIMIENTO DATE,
--LLAVES SECUNDARIAS
FK_ID_GENERO  INTEGER NOT NULL,
FK_CEDULAPADRE INTEGER NOT NULL,
CONSTRAINT FK_ID_GENERONINIO FOREIGN KEY (FK_ID_GENERO) REFERENCES GENERO(ID_GENERO),
CONSTRAINT FK_CEDULAPADRE FOREIGN KEY (FK_CEDULAPADRE) REFERENCES Padre(CEDULAPADRE)
);

CREATE TABLE ESTADO_SOCIAL(
ID_ESTADO INTEGER NOT NULL PRIMARY KEY,
TALLAVESTIMENTA varchar2(50),
TALLAZAPATOS varchar2(50),
ALERGIAS VARCHAR2(50),
DIAGNOSTICO VARCHAR2(50),
FECHAULTIMAENFERMEAD DATE,
FK_CEDULANINIO INTEGER,
CONSTRAINT FK_CEDULANINIO FOREIGN KEY (FK_CEDULANINIO) REFERENCES NINIO(CEDULANINIO)
);

CREATE TABLE MEDICINAXESTADO(
FK_ID_ESTADO INTEGER,
FK_ID_MEDICINA INTEGER,
CONSTRAINT FK_ID_ESTADO FOREIGN KEY (FK_ID_ESTADO) REFERENCES ESTADO_SOCIAL(ID_ESTADO),
CONSTRAINT FK_ID_MEDICINA FOREIGN KEY (FK_ID_MEDICINA) REFERENCES MEDICINA(ID_MEDICINA)
);

CREATE TABLE TUTORESNINIO(
FK_CEDULATUTOR INTEGER,
FK_CEDULANINIO INTEGER,
CONSTRAINT FK_CEDULATUTOR FOREIGN KEY (FK_CEDULATUTOR) REFERENCES TUTORES(CEDULATUTOR),
CONSTRAINT FK_CEDULANINIOTUTOR FOREIGN KEY (FK_CEDULANINIO) REFERENCES NINIO(CEDULANINIO)
);


 CREATE TABLE MATRICULAACTIVIDAD(
 ID_MATRICULA INTEGER NOT NULL PRIMARY KEY,
 DESCRIPCION VARCHAR2(100),
 ANIOELECTIVO DATE,
 DESEMPENIO VARCHAR2(50),
 TOTALPAGAR NUMBER (7,2)DEFAULT 0,
 FK_CEDULANINIO INTEGER,
 FK_ID_ACTIVIDAD INTEGER,
 CONSTRAINT FK_CEDULANINIOMATRICULA FOREIGN KEY (FK_CEDULANINIO) REFERENCES NINIO(CEDULANINIO),
 CONSTRAINT FK_ID_ACTIVIDAD2 FOREIGN KEY (FK_ID_ACTIVIDAD) REFERENCES ACTIVIDAD(ID_ACTIVIDAD),
 CONSTRAINT CHECK_DESEMPENIO CHECK (DESEMPENIO in ('BUENO','REGULAR','MALO'))
 );

-------------------------------------------trigger----------------------------------------------------------
---activar salida de consola--------------------------------------------------------------------------------
SET serveroutput ON;
------------------------------------------------------------------------------------------------------------
create or replace TRIGGER TR_MATRICULA
 before 
 INSERT ON MATRICULAACTIVIDAD 
 FOR EACH ROW
 declare
 PRECIO NUMBER(7,2);
 cursor Matricula is select FK_ID_ACTIVIDAD FROM MATRICULAACTIVIDAD 
 WHERE FK_CEDULANINIO = :NEW.FK_CEDULANINIO and FK_ID_ACTIVIDAD = :NEW.FK_ID_ACTIVIDAD;
 BEGIN 
 SELECT PRECIO_ACTIVIDAD INTO PRECIO FROM ACTIVIDAD WHERE ID_ACTIVIDAD = :NEW.FK_ID_ACTIVIDAD;
 :new.TOTALPAGAR:=PRECIO;
 DBMS_OUTPUT.put_line ('SE ACTUALIZO VALOR A PAGAR');
 for registros in Matricula loop
  IF(registros.FK_ID_ACTIVIDAD=:NEW.FK_ID_ACTIVIDAD)THEN
     :new.TOTALPAGAR:= PRECIO/2;
     DBMS_OUTPUT.put_line ('POR REPETIR MATRICULA SE APLICO 50% DE DESCUENTO');   
  END IF;
 end loop;
 END TR_MATRICULA;

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------INSERT------------------------------------------------------------------
--GENEROS----------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE GENERO;
 -----------------------------------------------
INSERT INTO GENERO VALUES (1,'MASCULINO');
INSERT INTO GENERO VALUES (2,'FEMENINO');
SELECT * FROM GENERO;
 ------------------------------------------------

  --PADRES---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE Padre;
 -----------------------------------------------
INSERT INTO Padre VALUES (1305669968,'MANUEL','DELGADO','ECUATORINO','CALLE 319 AV 218',0962154879,0523515151,'15-02-1983',1);
INSERT INTO Padre VALUES (1305669973,'ISABELLA','MACIAS','ECUATORINO','CALLE 302 AV 203',0962157843,0523519785,'23-12-1993',1);
INSERT INTO Padre VALUES (1305669969,'ROBERTO','ANDRADE','ECUATORINO','CALLE 315 AV 230',0962154889,0523518596,'20-02-1990',1);

SELECT * FROM Padre;
 --------------------------------------------------------------------------------------------------------------------- 
 --NINIOS---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE NINIO;
 -----------------------------------------------
INSERT INTO NINIO VALUES (1315669968,'JORGE','DELGADO','ECUATORINO',5,'15-02-2017',1,1305669968);
INSERT INTO NINIO VALUES (1315669967,'ALEJANDRA','MACIAS','ECUATORINO',4,'15-02-2018',2,1305669973);
INSERT INTO NINIO VALUES (1315669966,'JUAN','ANDRADE','ECUATORINO',3,'15-02-2019',1,1305669969);

SELECT * FROM NINIO;
 
 ---------------------------------------------------------------------------------------------------------------------
 --PROFESORES ---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE PROFESORES;
 -----------------------------------------------
INSERT INTO PROFESORES VALUES (1305669968,'RODRIGO','INTRIAGO','ECUATORINO','15-01-2019',54879,1);
INSERT INTO PROFESORES VALUES (1305669973,'ISABELLA','VELEZ','ECUATORINO','27-05-2015',57843,2);
INSERT INTO PROFESORES VALUES (1305669969,'RAUL','SANTIAGO','ECUATORINO','08-01-2015',54889,1);

SELECT * FROM PROFESORES;
 ---------------------------------------------------------------------------------------------------------------------
  --TIPOACTIVIDAD ---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE TIPOACTIVIDAD;
 -----------------------------------------------
 --El kínder cuenta con programas para la estimulación del desarrollo intelectual, emocional y motriz del niño
INSERT INTO TIPOACTIVIDAD VALUES (1,'INTELECTUAL','ACTIVIDAD DE TIPO INTELECTUAL');
INSERT INTO TIPOACTIVIDAD VALUES (2,'EMOCIONAL','ACTIVIDAD DE TIPO EMOCIONAL');
INSERT INTO TIPOACTIVIDAD VALUES (3,'MOTRIZ','ACTIVIDAD DE TIPO MOTRIZ');

SELECT * FROM TIPOACTIVIDAD;
 ---------------------------------------------------------------------------------------------------------------------
--ACTIVIDAD ---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE ACTIVIDAD;
 -----------------------------------------------
INSERT INTO ACTIVIDAD VALUES (1,'DESAROLLO DE LA MEMORIA','EJERICIOS PARA ESTIMULACION DE LA MEMORIA',6,30,10,'ROMPECABEZAS Y PARES DE CARTAS',30,1,1305669968);
INSERT INTO ACTIVIDAD VALUES (2,'ESTIMULACION EMOCIONAL','HISTORIAS Y RELATOS SENTIMENTALES',6,10,2,'LIBROS',30,2,1305669973);
INSERT INTO ACTIVIDAD VALUES (3,'CAMINATAS','CAMINATAS EN EL PATIO DE RECREO',3,20,1,'ZAPATOS DEPORTIVOS TALLA DEL NIÑO',30,3,1305669969);

SELECT * FROM ACTIVIDAD; 
---------------------------------------------------------------------------------------------------------------------
--MATRICULAACTIVIDAD ---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE MATRICULAACTIVIDAD;
 -----------------------------------------------
INSERT INTO MATRICULAACTIVIDAD VALUES (1,'MATRICULACION A DESAROLLO DE LA MEMORIA','01-08-2020','BUENO',0,1315669968,1);
INSERT INTO MATRICULAACTIVIDAD VALUES (2,'MATRICULACION A ESTIMULACION EMOCIONAL','01-08-2020','MALO',0,1315669968,2);
INSERT INTO MATRICULAACTIVIDAD VALUES (3,'MATRICULACION A CAMINATAS','01-08-2019','REGULAR',0,1315669968,3);
INSERT INTO MATRICULAACTIVIDAD VALUES (4,'MATRICULACION A DESAROLLO DE LA MEMORIA','01-08-2020','BUENO',0,1315669968,1);
INSERT INTO MATRICULAACTIVIDAD VALUES (5,'MATRICULACION A DESAROLLO DE LA MEMORIA','01-08-2020','MALO',0,1315669967,1);
INSERT INTO MATRICULAACTIVIDAD VALUES (6,'MATRICULACION A DESAROLLO DE LA MEMORIA','01-08-2021','MALO',0,1315669967,1);
INSERT INTO MATRICULAACTIVIDAD VALUES (7,'MATRICULACION A CAMINATAS','01-08-2020','BUENO',0,1315669966,3);
INSERT INTO MATRICULAACTIVIDAD VALUES (8,'MATRICULACION A CAMINATAS','01-08-2020','BUENO',0,1315669966,3);

SELECT * FROM MATRICULAACTIVIDAD; 
-----------------------------------------------------------------------------------------------------------------------
--ESTADO_SOCIAL ---------------------------------------
 --TRUNCAR--------------------------------------
 TRUNCATE TABLE ESTADO_SOCIAL;
 -----------------------------------------------
INSERT INTO ESTADO_SOCIAL VALUES (1,'59','20','ALERGIA AL POLEN DE LAS FLORES','MANTENER ALEJADO DE FLORES A LOS NIÑOS','15-01-2021',1315669968);
INSERT INTO ESTADO_SOCIAL VALUES (2,'57','22','ALERGIA AL PELO DE ANIMALES','MANTENER ALEJADO DE ANIMALES','15-05-2021',1315669967);
INSERT INTO ESTADO_SOCIAL VALUES (3,'60','22','NO TIENE ALERGIAS','NIO SANO','20-05-2020',1315669966);

SELECT * FROM ESTADO_SOCIAL; 
---------------------------------------------------------------------------------------------------------------------

 ----------------------------------------------------------------------------------------------------------------------
 ---------------------------------CURSOR-------------------------------------------------------------------------------
 ---activar salida de consola--------------------------------------------------------------------------------
SET serveroutput ON;
-------------------------------------------------------------------------------------------------------------
DECLARE
CURSOR MATRICULACIONES_ANIO IS
SELECT EXTRACT(YEAR FROM M.ANIOELECTIVO ) AS AÑO,A.NOMBREACTIVIDAD,COUNT(CEDULANINIO) AS NUM_MATRICULACIONES,G.GENERO FROM NINIO 
INNER JOIN MATRICULAACTIVIDAD M ON M.FK_CEDULANINIO = CEDULANINIO
INNER JOIN GENERO G ON G.ID_GENERO = FK_ID_GENERO
INNER JOIN ACTIVIDAD A ON M.FK_ID_ACTIVIDAD= A.ID_ACTIVIDAD
GROUP BY M.ANIOELECTIVO, EXTRACT(YEAR FROM M.ANIOELECTIVO ),G.GENERO,A.NOMBREACTIVIDAD
ORDER BY EXTRACT(YEAR FROM M.ANIOELECTIVO ) ASC; 
BEGIN 
 FOR MATRICULAS IN MATRICULACIONES_ANIO LOOP
    DBMS_OUTPUT.put_line ('EN EL AÑO:'||MATRICULAS.AÑO||' SE MATRICUALARON:'||MATRICULAS.NUM_MATRICULACIONES||' ESTUDIANTES '||MATRICULAS.GENERO||
    ' EN LA ACTIVIDAD: '||MATRICULAS.NOMBREACTIVIDAD);  
 END LOOP;
END;
------------------------------CONSULTAS------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------
--------CONSULTA 1---------------------------------------------------------------------------------------------------------
/*
- Mostrar histórico de cantidad de profesores por año.
En una columna aparecerá el año lectivo, en otra columna aparecerá el número de mujeres, 
en otra columna aparecerá el número de hombres. */
SELECT EXTRACT(YEAR FROM PROFESORES.FECHADEINGRESO ) AS AÑO,COUNT(CEDULAPROFESOR) AS NUM_PROFESORES,G.GENERO  
FROM PROFESORES
INNER JOIN GENERO G ON G.ID_GENERO=PROFESORES.FK_ID_GENERO
GROUP BY EXTRACT(YEAR FROM PROFESORES.FECHADEINGRESO ),G.GENERO
ORDER BY EXTRACT(YEAR FROM PROFESORES.FECHADEINGRESO ) ASC;
 -------------------------------------------------------------------------------------------------------------------------- 
--------CONSULTA 2---------------------------------------------------------------------------------------------------------
/*- Mostrar histórico de rendimiento por programas. 
En una columna debe aparecer el año lectivo, en otra columna el nombre del programa, 
en otra columna la cantidad de rendimientos buenos, en otra columna la cantidad de rendimientos regulares,
en otra columna la cantidad de rendimientos regulares.*/
SELECT EXTRACT(YEAR FROM MATRICULAACTIVIDAD.ANIOELECTIVO ) AS AÑO,A.NOMBREACTIVIDAD,DESEMPENIO,COUNT(DESEMPENIO)AS NUM_DESEMPENIOS 
FROM MATRICULAACTIVIDAD
INNER JOIN ACTIVIDAD A ON A.ID_ACTIVIDAD=MATRICULAACTIVIDAD.FK_ID_ACTIVIDAD 
GROUP BY DESEMPENIO,EXTRACT(YEAR FROM MATRICULAACTIVIDAD.ANIOELECTIVO ),A.NOMBREACTIVIDAD
ORDER BY EXTRACT(YEAR FROM MATRICULAACTIVIDAD.ANIOELECTIVO ) ASC;
---------------------------------------------------------------------------------------------------------------------------
---------consulta 3--------------------------------------------------------------------------------------------------------
/*MOSTRAR UNA CONSULTA EN LA QUE SALGAN: EN UNA COLUMNA LOS NOMBRES DEL NIÑO ,SU CEDULA,SU EDAD Y SU GENERO,ADEMAS QUE SE MUESTREN
LOS DATOS DE SU PADRE REGISTRADO SEAN ESTOS: NOMBRES DIRECCION TELEFONO Y TELEFONO DEL DOMICILIO*/
---------------------------------------------------------------------------------------------------------------------------
SELECT NINIO.CEDULANINIO,NINIO.NOMBRES||' '||NINIO.APELLIDOS AS NOMBRESNINIO, G.GENERO,NINIO.EDAD,P.NOMBRES||' '||P.APELLIDOS AS NOMBRESPADRE,
P.DIRECCION,P.TELEFONO,P.TELEFONODOMICILIO
FROM NINIO
INNER JOIN PADRE P ON P.CEDULAPADRE = NINIO.FK_CEDULAPADRE
INNER JOIN GENERO G ON G.ID_GENERO = NINIO.FK_ID_GENERO
ORDER BY NINIO.CEDULANINIO ASC; 
---------------------------------------------------------------------------------------------------------------------------
---------------CONSULTA 4-----------------------------------------------------------------------------------------------------
/*MOSTRAR EL NOMBRE DEL ESTUDIANTE, SU NUMERO DE CEDULA , GENERO Y LA EDAD,ADEMAS DE ESTOS DATOS MOSTRAR LAS ALEGIAS, EL DIAGNOSITCO 
Y LA FECHA DE ULTIMA ENFERMEDAD DEL NIÑO.*/
SELECT NINIO.CEDULANINIO,NINIO.NOMBRES||' '||NINIO.APELLIDOS AS NOMBRESNINIO, G.GENERO,E.ALERGIAS,E.DIAGNOSTICO,E.FECHAULTIMAENFERMEAD
FROM NINIO
INNER JOIN GENERO G ON G.ID_GENERO = NINIO.FK_ID_GENERO
INNER JOIN ESTADO_SOCIAL E ON E.FK_CEDULANINIO = NINIO.CEDULANINIO
ORDER BY NINIO.CEDULANINIO ASC;